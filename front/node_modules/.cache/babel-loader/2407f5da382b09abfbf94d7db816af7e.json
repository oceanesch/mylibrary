{"ast":null,"code":"var _jsxFileName = \"/home/oceane/Documents/Code/mylibrary/front/src/components/LogIn/LogInForm.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styles from '../SignUp/SignUpForm.module.css';\nimport { StyledEngineProvider } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\nimport PasswordInput from '../Shared/PasswordInput';\nimport EmailInput from '../Shared/EmailInput';\nimport AuthContext from '../../store/auth-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LogInForm = () => {\n  _s();\n\n  const navigationHistory = useNavigate();\n  const authCtx = useContext(AuthContext);\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  const LogInSubmitHandler = event => {\n    event.preventDefault();\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n    console.log(enteredEmail, enteredPassword);\n    fetch('https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDe2VlLrzxhf8f_PW46fjEuMfYRy6yDvSY', {\n      method: 'POST',\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPassword,\n        returnSecureToken: true\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      if (response.ok) {\n        navigationHistory('/myshelf');\n        return response.json();\n      } else {\n        return response.json().then(responseData => {\n          let errorMessage = 'Authentication failed';\n\n          if (responseData && responseData.error && responseData.error.message) {\n            errorMessage = responseData.error.message;\n          }\n\n          throw new Error(errorMessage);\n        });\n      }\n    }).then(responseData => {\n      console.log(responseData);\n      authCtx.logIn(responseData.idToken);\n    }).catch(err => {\n      alert(err.message);\n    });\n    emailInputRef.current.value = '';\n    passwordInputRef.current.value = '';\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledEngineProvider, {\n    injectFirst: true,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: LogInSubmitHandler,\n      className: styles.signUpForm,\n      children: [/*#__PURE__*/_jsxDEV(EmailInput, {\n        emailInputRef: emailInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PasswordInput, {\n        passwordInputRef: passwordInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        margin: \"normal\",\n        type: \"submit\",\n        className: styles.button,\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LogInForm, \"f96qq+BlPfZSSwQ1Qr3TzkvhlNg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = LogInForm;\nexport default LogInForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LogInForm\");","map":{"version":3,"sources":["/home/oceane/Documents/Code/mylibrary/front/src/components/LogIn/LogInForm.js"],"names":["useContext","useRef","useNavigate","styles","StyledEngineProvider","Button","PasswordInput","EmailInput","AuthContext","LogInForm","navigationHistory","authCtx","emailInputRef","passwordInputRef","LogInSubmitHandler","event","preventDefault","enteredEmail","current","value","enteredPassword","console","log","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","then","response","ok","json","responseData","errorMessage","error","message","Error","logIn","idToken","catch","err","alert","signUpForm","button"],"mappings":"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","sourcesContent":["import { useContext, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport styles from '../SignUp/SignUpForm.module.css';\nimport { StyledEngineProvider } from '@mui/material/styles';\n\nimport Button from '@mui/material/Button';\n\nimport PasswordInput from '../Shared/PasswordInput';\nimport EmailInput from '../Shared/EmailInput';\nimport AuthContext from '../../store/auth-context';\n\nconst LogInForm = () => {\n    const navigationHistory = useNavigate();\n    const authCtx = useContext(AuthContext);\n\n    const emailInputRef = useRef();\n    const passwordInputRef = useRef();\n\n    const LogInSubmitHandler = (event) => {\n        event.preventDefault();\n\n        const enteredEmail = emailInputRef.current.value;\n        const enteredPassword = passwordInputRef.current.value;\n\n        console.log(enteredEmail, enteredPassword);\n\n        fetch(\n            'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDe2VlLrzxhf8f_PW46fjEuMfYRy6yDvSY',\n            {\n                method: 'POST',\n                body: JSON.stringify({\n                    email: enteredEmail,\n                    password: enteredPassword,\n                    returnSecureToken: true,\n                }),\n                headers: { 'Content-Type': 'application/json' },\n            }\n        )\n            .then((response) => {\n                if (response.ok) {\n                    navigationHistory('/myshelf');\n                    return response.json();\n                } else {\n                    return response.json().then((responseData) => {\n                        let errorMessage = 'Authentication failed';\n                        if (\n                            responseData &&\n                            responseData.error &&\n                            responseData.error.message\n                        ) {\n                            errorMessage = responseData.error.message;\n                        }\n                        throw new Error(errorMessage);\n                    });\n                }\n            })\n            .then((responseData) => {\n                console.log(responseData);\n                authCtx.logIn(responseData.idToken);\n            })\n            .catch((err) => {\n                alert(err.message);\n            });\n\n        emailInputRef.current.value = '';\n        passwordInputRef.current.value = '';\n    };\n\n    return (\n        <StyledEngineProvider injectFirst>\n            <form onSubmit={LogInSubmitHandler} className={styles.signUpForm}>\n                <EmailInput emailInputRef={emailInputRef} />\n                <PasswordInput passwordInputRef={passwordInputRef} />\n                <Button\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    type=\"submit\"\n                    className={styles.button}\n                >\n                    Sign Up\n                </Button>\n            </form>\n        </StyledEngineProvider>\n    );\n};\n\nexport default LogInForm;\n"]},"metadata":{},"sourceType":"module"}