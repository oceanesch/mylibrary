{"ast":null,"code":"var _jsxFileName = \"/home/oceane/Documents/Code/mylibrary/front/src/components/MyShelf/BooksList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Grid from '@mui/material/Grid';\nimport BookItem from './BookItem'; // const DUMMY_BOOKS = [\n//     {\n//         id: 'book1',\n//         title: 'Aristotle and Dante discover the Secrets of the Universe',\n//         author: 'Benjamin Alire Saenz',\n//         image: 'https://images-na.ssl-images-amazon.com/images/I/81w9ZlovACL.jpg',\n//     },\n//     {\n//         id: 'book2',\n//         title: 'Before the Coffee gets Cold',\n//         author: 'Toshikazu Kawaguchi',\n//         image: 'https://images-na.ssl-images-amazon.com/images/I/81P4+L4dGfL.jpg',\n//     },\n//     {\n//         id: 'book3',\n//         title: 'Everyone is a Aliebn When Ur a Aliebn Too',\n//         author: 'Jomny Sun',\n//         image: 'https://images-na.ssl-images-amazon.com/images/I/519SE+JwJ3L.jpg',\n//     },\n//     {\n//         id: 'book4',\n//         title: 'Dune',\n//         author: 'Frank Herbert',\n//         image: 'https://images-na.ssl-images-amazon.com/images/I/81fuj9MOHfL.jpg',\n//     },\n//     {\n//         id: 'book5',\n//         title: 'Sapiens: A Brief History of Humankind',\n//         author: 'Yuval Noah Harari',\n//         image: 'https://images-na.ssl-images-amazon.com/images/I/71Sx9g3a-xL.jpg',\n//     },\n//     {\n//         id: 'book6',\n//         title: 'The House in the Cerulean Sea',\n//         author: 'T.J. Klune',\n//         image: 'https://images-na.ssl-images-amazon.com/images/I/81MnY8Q7OLL.jpg',\n//     },\n//     {\n//         id: 'book7',\n//         title: 'The song of Achilles',\n//         author: 'Madeline Miller',\n//         image: 'https://images-na.ssl-images-amazon.com/images/I/91k4PrTuiSL.jpg',\n//     },\n//     {\n//         id: 'book8',\n//         title: 'This Is How You Lose the Time War',\n//         author: 'Amal El-Mohtar',\n//         image: 'https://images-na.ssl-images-amazon.com/images/I/71u+V+fclqL.jpg',\n//     },\n//     {\n//         id: 'book9',\n//         title: 'Raybearer',\n//         author: 'Jordan Ifueko',\n//         image: 'https://i.gr-assets.com/images/S/compressed.photo.goodreads.com/books/1567330635l/50158128._SX0_SY0_.jpg',\n//     },\n//     {\n//         id: 'book10',\n//         title: 'The Dark Between Stars',\n//         author: 'Atticus Poetry',\n//         image: 'https://images-na.ssl-images-amazon.com/images/I/91b2W5Xh49L.jpg',\n//     },\n// ];\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BookList = () => {\n  _s();\n\n  const [books, setBooks] = useState([]);\n  const navigationHistory = useNavigate();\n  useEffect(() => {\n    fetch('http://localhost:8080/myshelf').then(response => {\n      if (response.status !== 200) {\n        throw new Error('Failed to fetch books.');\n      }\n\n      return response.json();\n    }).then(responseData => {\n      setBooks(responseData.books);\n    }).catch(error => console.log(error));\n  }, []);\n\n  const deleteBookHandler = deletedBookID => {\n    fetch('http://localhost:8080/myshelf/' + deletedBookID, {\n      method: 'DELETE'\n    }).then(response => {\n      if (response.status !== 200) {\n        throw new Error('Deleting book failed');\n      }\n\n      return response.json();\n    }).then(responseData => {\n      console.log(responseData);\n      const updatedBooks = books.filter(book => book._id !== deletedBookID);\n      setBooks(updatedBooks); //Why this doesn't work ??\n      // setBooks((prevState) => {\n      //   const updatedBooks = prevState.books.filter((book) => {\n      //     return book._id !== deletedBookID;\n      //   });\n      //   return { books: updatedBooks };\n      // });\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const editBookHandler = editedBookId => {\n    navigationHistory('/editbook');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    direction: {\n      xs: 'column',\n      sm: 'row'\n    },\n    spacing: 1,\n    justifyContent: \"space-evenly\",\n    children: books.map(book => {\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(BookItem, {\n          id: book._id,\n          title: book.title,\n          author: book.author,\n          image: book.image,\n          onSaveDeletedBookId: deleteBookHandler,\n          onEditBook: editBookHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this)\n      }, book._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BookList, \"bV2PAfSSejHIgszh5SXSQfKvy90=\", false, function () {\n  return [useNavigate];\n});\n\n_c = BookList;\nexport default BookList;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookList\");","map":{"version":3,"sources":["/home/oceane/Documents/Code/mylibrary/front/src/components/MyShelf/BooksList.js"],"names":["React","useState","useEffect","useNavigate","Grid","BookItem","BookList","books","setBooks","navigationHistory","fetch","then","response","status","Error","json","responseData","catch","error","console","log","deleteBookHandler","deletedBookID","method","updatedBooks","filter","book","_id","editBookHandler","editedBookId","xs","sm","map","title","author","image"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Grid from '@mui/material/Grid';\nimport BookItem from './BookItem';\n\n// const DUMMY_BOOKS = [\n//     {\n//         id: 'book1',\n//         title: 'Aristotle and Dante discover the Secrets of the Universe',\n//         author: 'Benjamin Alire Saenz',\n//         image: 'https://images-na.ssl-images-amazon.com/images/I/81w9ZlovACL.jpg',\n//     },\n//     {\n//         id: 'book2',\n//         title: 'Before the Coffee gets Cold',\n//         author: 'Toshikazu Kawaguchi',\n//         image: 'https://images-na.ssl-images-amazon.com/images/I/81P4+L4dGfL.jpg',\n//     },\n//     {\n//         id: 'book3',\n//         title: 'Everyone is a Aliebn When Ur a Aliebn Too',\n//         author: 'Jomny Sun',\n//         image: 'https://images-na.ssl-images-amazon.com/images/I/519SE+JwJ3L.jpg',\n//     },\n//     {\n//         id: 'book4',\n//         title: 'Dune',\n//         author: 'Frank Herbert',\n//         image: 'https://images-na.ssl-images-amazon.com/images/I/81fuj9MOHfL.jpg',\n//     },\n//     {\n//         id: 'book5',\n//         title: 'Sapiens: A Brief History of Humankind',\n//         author: 'Yuval Noah Harari',\n//         image: 'https://images-na.ssl-images-amazon.com/images/I/71Sx9g3a-xL.jpg',\n//     },\n//     {\n//         id: 'book6',\n//         title: 'The House in the Cerulean Sea',\n//         author: 'T.J. Klune',\n//         image: 'https://images-na.ssl-images-amazon.com/images/I/81MnY8Q7OLL.jpg',\n//     },\n//     {\n//         id: 'book7',\n//         title: 'The song of Achilles',\n//         author: 'Madeline Miller',\n//         image: 'https://images-na.ssl-images-amazon.com/images/I/91k4PrTuiSL.jpg',\n//     },\n//     {\n//         id: 'book8',\n//         title: 'This Is How You Lose the Time War',\n//         author: 'Amal El-Mohtar',\n//         image: 'https://images-na.ssl-images-amazon.com/images/I/71u+V+fclqL.jpg',\n//     },\n//     {\n//         id: 'book9',\n//         title: 'Raybearer',\n//         author: 'Jordan Ifueko',\n//         image: 'https://i.gr-assets.com/images/S/compressed.photo.goodreads.com/books/1567330635l/50158128._SX0_SY0_.jpg',\n//     },\n//     {\n//         id: 'book10',\n//         title: 'The Dark Between Stars',\n//         author: 'Atticus Poetry',\n//         image: 'https://images-na.ssl-images-amazon.com/images/I/91b2W5Xh49L.jpg',\n//     },\n// ];\n\nconst BookList = () => {\n  const [books, setBooks] = useState([]);\n\n  const navigationHistory = useNavigate();\n\n  useEffect(() => {\n    fetch('http://localhost:8080/myshelf')\n      .then((response) => {\n        if (response.status !== 200) {\n          throw new Error('Failed to fetch books.');\n        }\n        return response.json();\n      })\n      .then((responseData) => {\n        setBooks(responseData.books);\n      })\n      .catch((error) => console.log(error));\n  }, []);\n\n  const deleteBookHandler = (deletedBookID) => {\n    fetch('http://localhost:8080/myshelf/' + deletedBookID, {\n      method: 'DELETE',\n    })\n      .then((response) => {\n        if (response.status !== 200) {\n          throw new Error('Deleting book failed');\n        }\n        return response.json();\n      })\n      .then((responseData) => {\n        console.log(responseData);\n\n        const updatedBooks = books.filter((book) => book._id !== deletedBookID);\n        setBooks(updatedBooks);\n\n        //Why this doesn't work ??\n        // setBooks((prevState) => {\n        //   const updatedBooks = prevState.books.filter((book) => {\n        //     return book._id !== deletedBookID;\n        //   });\n        //   return { books: updatedBooks };\n        // });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const editBookHandler = (editedBookId) => {\n    navigationHistory('/editbook');\n  };\n\n  return (\n    <Grid\n      container\n      direction={{ xs: 'column', sm: 'row' }}\n      spacing={1}\n      justifyContent=\"space-evenly\"\n    >\n      {books.map((book) => {\n        return (\n          <Grid item key={book._id}>\n            <BookItem\n              id={book._id}\n              title={book.title}\n              author={book.author}\n              image={book.image}\n              onSaveDeletedBookId={deleteBookHandler}\n              onEditBook={editBookHandler}\n            />\n          </Grid>\n        );\n      })}\n    </Grid>\n  );\n};\n\nexport default BookList;\n"]},"metadata":{},"sourceType":"module"}