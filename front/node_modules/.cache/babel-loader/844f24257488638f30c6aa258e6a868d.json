{"ast":null,"code":"var _jsxFileName = \"/home/oceane/Documents/Code/mylibrary/front/src/components/SignUp/SignUpForm.js\",\n    _s = $RefreshSig$();\n\nimport { useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styles from './SignUpForm.module.css';\nimport { StyledEngineProvider } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\nimport PasswordInput from '../Shared/PasswordInput'; // import FirstNameInput from '../Shared/FirstNameInput';\n// import LastNameInput from '../Shared/LastNameInput';\n\nimport EmailInput from '../Shared/EmailInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUpForm = () => {\n  _s();\n\n  const navigationHistory = useNavigate(); // const firstNameInputRef = useRef();\n  // const lastNameInputRef = useRef();\n\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  const signUpSubmitHandler = event => {\n    event.preventDefault(); // const enteredFirstName = firstNameInputRef.current.value;\n    // const enteredLastName = lastNameInputRef.current.value;\n\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value; // add validation after here\n\n    fetch('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDe2VlLrzxhf8f_PW46fjEuMfYRy6yDvSY', {\n      method: 'POST',\n      body: JSON.stringify({\n        // firstName: enteredFirstName,\n        // lastName: enteredLastName,\n        email: enteredEmail,\n        password: enteredPassword,\n        returnSecureToken: true\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(responsePayLoad => {\n      if (responsePayLoad.ok) {\n        navigationHistory('/myshelf');\n      } else {\n        return responsePayLoad.json().then(responseData => {\n          console.log(responseData);\n\n          if (responseData && responseData.error && responseData.error.message) {\n            const errorMessage = responseData.error.message;\n            alert(errorMessage);\n          }\n        });\n      }\n    });\n    console.log( // enteredFirstName,\n    // enteredLastName,\n    enteredEmail, enteredPassword);\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledEngineProvider, {\n    injectFirst: true,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: signUpSubmitHandler,\n      className: styles.signUpForm,\n      children: [/*#__PURE__*/_jsxDEV(EmailInput, {\n        emailInputRef: emailInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PasswordInput, {\n        passwordInputRef: passwordInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        margin: \"normal\",\n        type: \"submit\",\n        className: styles.button,\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignUpForm, \"kXWqGSoHvUsGcZGzj4pHkSQklTk=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SignUpForm;\nexport default SignUpForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpForm\");","map":{"version":3,"sources":["/home/oceane/Documents/Code/mylibrary/front/src/components/SignUp/SignUpForm.js"],"names":["useRef","useNavigate","styles","StyledEngineProvider","Button","PasswordInput","EmailInput","SignUpForm","navigationHistory","emailInputRef","passwordInputRef","signUpSubmitHandler","event","preventDefault","enteredEmail","current","value","enteredPassword","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","then","responsePayLoad","ok","json","responseData","console","log","error","message","errorMessage","alert","signUpForm","button"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,OAAvB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,oBAAT,QAAqC,sBAArC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,OAAOC,aAAP,MAA0B,yBAA1B,C,CACA;AACA;;AACA,OAAOC,UAAP,MAAuB,sBAAvB;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB,QAAMC,iBAAiB,GAAGP,WAAW,EAArC,CADqB,CAGrB;AACA;;AACA,QAAMQ,aAAa,GAAGT,MAAM,EAA5B;AACA,QAAMU,gBAAgB,GAAGV,MAAM,EAA/B;;AAEA,QAAMW,mBAAmB,GAAIC,KAAD,IAAW;AACnCA,IAAAA,KAAK,CAACC,cAAN,GADmC,CAGnC;AACA;;AACA,UAAMC,YAAY,GAAGL,aAAa,CAACM,OAAd,CAAsBC,KAA3C;AACA,UAAMC,eAAe,GAAGP,gBAAgB,CAACK,OAAjB,CAAyBC,KAAjD,CANmC,CAQnC;;AAEAE,IAAAA,KAAK,CACD,uGADC,EAED;AACIC,MAAAA,MAAM,EAAE,MADZ;AAEIC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjB;AACA;AACAC,QAAAA,KAAK,EAAET,YAHU;AAIjBU,QAAAA,QAAQ,EAAEP,eAJO;AAKjBQ,QAAAA,iBAAiB,EAAE;AALF,OAAf,CAFV;AASIC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AATb,KAFC,CAAL,CAaEC,IAbF,CAaQC,eAAD,IAAqB;AACxB,UAAIA,eAAe,CAACC,EAApB,EAAwB;AACpBrB,QAAAA,iBAAiB,CAAC,UAAD,CAAjB;AACH,OAFD,MAEO;AACH,eAAOoB,eAAe,CAACE,IAAhB,GAAuBH,IAAvB,CAA6BI,YAAD,IAAkB;AACjDC,UAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;;AACA,cACIA,YAAY,IACZA,YAAY,CAACG,KADb,IAEAH,YAAY,CAACG,KAAb,CAAmBC,OAHvB,EAIE;AACE,kBAAMC,YAAY,GAAGL,YAAY,CAACG,KAAb,CAAmBC,OAAxC;AACAE,YAAAA,KAAK,CAACD,YAAD,CAAL;AACH;AACJ,SAVM,CAAP;AAWH;AACJ,KA7BD;AA+BAJ,IAAAA,OAAO,CAACC,GAAR,EACI;AACA;AACAnB,IAAAA,YAHJ,EAIIG,eAJJ;AAMH,GA/CD;;AAiDA,sBACI,QAAC,oBAAD;AAAsB,IAAA,WAAW,MAAjC;AAAA,2BACI;AAAM,MAAA,QAAQ,EAAEN,mBAAhB;AAAqC,MAAA,SAAS,EAAET,MAAM,CAACoC,UAAvD;AAAA,8BAQI,QAAC,UAAD;AACI,QAAA,aAAa,EAAE7B;AADnB;AAAA;AAAA;AAAA;AAAA,cARJ,eAWI,QAAC,aAAD;AACI,QAAA,gBAAgB,EAAEC;AADtB;AAAA;AAAA;AAAA;AAAA,cAXJ,eAcI,QAAC,MAAD;AACI,QAAA,OAAO,EAAC,UADZ;AAEI,QAAA,MAAM,EAAC,QAFX;AAGI,QAAA,IAAI,EAAC,QAHT;AAII,QAAA,SAAS,EAAER,MAAM,CAACqC,MAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH,CApFD;;GAAMhC,U;UACwBN,W;;;KADxBM,U;AAsFN,eAAeA,UAAf","sourcesContent":["import { useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styles from './SignUpForm.module.css';\nimport { StyledEngineProvider } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\n\nimport PasswordInput from '../Shared/PasswordInput';\n// import FirstNameInput from '../Shared/FirstNameInput';\n// import LastNameInput from '../Shared/LastNameInput';\nimport EmailInput from '../Shared/EmailInput';\n\nconst SignUpForm = () => {\n    const navigationHistory = useNavigate();\n\n    // const firstNameInputRef = useRef();\n    // const lastNameInputRef = useRef();\n    const emailInputRef = useRef();\n    const passwordInputRef = useRef();\n\n    const signUpSubmitHandler = (event) => {\n        event.preventDefault();\n\n        // const enteredFirstName = firstNameInputRef.current.value;\n        // const enteredLastName = lastNameInputRef.current.value;\n        const enteredEmail = emailInputRef.current.value;\n        const enteredPassword = passwordInputRef.current.value;\n\n        // add validation after here\n\n        fetch(\n            'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDe2VlLrzxhf8f_PW46fjEuMfYRy6yDvSY',\n            {\n                method: 'POST',\n                body: JSON.stringify({\n                    // firstName: enteredFirstName,\n                    // lastName: enteredLastName,\n                    email: enteredEmail,\n                    password: enteredPassword,\n                    returnSecureToken: true,\n                }),\n                headers: { 'Content-Type': 'application/json' },\n            }\n        ).then((responsePayLoad) => {\n            if (responsePayLoad.ok) {\n                navigationHistory('/myshelf');\n            } else {\n                return responsePayLoad.json().then((responseData) => {\n                    console.log(responseData);\n                    if (\n                        responseData &&\n                        responseData.error &&\n                        responseData.error.message\n                    ) {\n                        const errorMessage = responseData.error.message;\n                        alert(errorMessage);\n                    }\n                });\n            }\n        });\n\n        console.log(\n            // enteredFirstName,\n            // enteredLastName,\n            enteredEmail,\n            enteredPassword\n        );\n    };\n\n    return (\n        <StyledEngineProvider injectFirst>\n            <form onSubmit={signUpSubmitHandler} className={styles.signUpForm}>\n                {/* <Grid item>\n                    <FirstNameInput firstNameInputRef={firstNameInputRef} />\n                </Grid>\n                <Grid item>\n                    <LastNameInput lastNameInputRef={lastNameInputRef} />\n                </Grid> */}\n\n                <EmailInput\n                    emailInputRef={emailInputRef}\n                />\n                <PasswordInput\n                    passwordInputRef={passwordInputRef}\n                />\n                <Button\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    type=\"submit\"\n                    className={styles.button}\n                >\n                    Sign Up\n                </Button>\n            </form>\n        </StyledEngineProvider>\n    );\n};\n\nexport default SignUpForm;\n"]},"metadata":{},"sourceType":"module"}